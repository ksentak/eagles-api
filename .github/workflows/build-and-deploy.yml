name: Deploy to Cloud Run

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GCP_REGION: us-east1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/eagles-api-repo/eagles-api:${{ github.sha }} .

          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/eagles-api-repo/eagles-api:${{ github.sha }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: eagles-api-service
          image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/eagles-api-repo/eagles-api:${{ github.sha }}
          region: ${{ env.GCP_REGION }}
          flags: --allow-unauthenticated --memory=512Mi --cpu=1 --port=8080

      - name: Delete old container images
        run: |
          gcloud artifacts docker images list ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/eagles-api-repo/eagles-api \
            --sort-by=~UPDATE_TIME \
            --format="get(NAME)" \
          | tail -n +2 \
          | while read image; do
              echo "Deleting old image: $image"
              gcloud artifacts docker images delete $image --quiet --delete-tags
            done

      - name: Delete old Cloud Run revisions
        run: |
          gcloud run revisions list \
            --service=eagles-api-service \
            --region=${{ env.GCP_REGION }} \
            --sort-by="~createTime" \
            --format="value(METADATA.name)" \
          | tail -n +2 \
          | while read revision; do
              echo "Deleting old revision: $revision"
              gcloud run revisions delete $revision --region=${{ env.GCP_REGION }} --quiet
            done
